/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 800  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&sk {
    release-after-ms = <1000>;
    quick-release;
    lazy;
    ignore-modifiers;
};

&mmv {
    acceleration-exponent = <1>;          // 1
    time-to-max-speed-ms = <500>;         // 300
    delay-ms = <0>;                       // 0
};

&lt {
    tapping-term-ms = <200>; // default 200
    flavor = "balanced"; // or hold-preferred or tap-preferred
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 0>;
        };

        vol_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <9 19>;
        };

        vol_down {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <19 29>;
        };

        CAPS_LOCK {
            bindings = <&kp CAPSLOCK>;
            key-positions = <4 5>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <9 8>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <7 6>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <3 2>;
        };

        em-dash {
            bindings = <&emdsh>;
            key-positions = <2 3 1>;
        };

        f19 {
            bindings = <&kp F19>;
            key-positions = <4 0 5 9>;
        };
    };

    macros {
        arrow_func: arrow_func {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>, <&macro_press>;

            label = "ARROW_FUNC";
        };

        emdsh: emdsh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp SPACE &kp MINUS &kp MINUS &kp SPACE>,
                <&macro_press>;

            label = "EMDSH";
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        arrow_func_tap: arrow_func_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "ARROW_FUNC_TAP";
            #binding-cells = <0>;
            bindings = <&kp GREATER_THAN>, <&arrow_func>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q         &kp W            &kp E              &kp R         &kp T      &kp Y      &kp U            &kp I               &kp O            &kp P
&bhm LMETA A  &bhm LEFT_ALT S  &bhm LEFT_SHIFT D  &bhm LCTRL F  &kp G      &kp H      &bhm RCTRL J     &bhm RIGHT_SHIFT K  &bhm LEFT_ALT L  &bhm LMETA SEMICOLON
&kp Z         &kp X            &kp C              &kp V         &kp B      &kp N      &kp M            &kp COMMA           &kp DOT          &kp FSLH
                               &kp LCTRL          &lt 1 SPACE   &lt 4 TAB  &lt 3 RET  &lt 2 BACKSPACE  &sk RIGHT_SHIFT
            >;
        };

        nav_layer {
            bindings = <
&trans    &trans    &trans          &trans            &trans  &mkp LCLK          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
&kp LGUI  &kp LALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &trans  &kp K_APPLICATION  &kp LEFT        &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT
&trans    &trans    &trans          &trans            &trans  &mkp MB4           &kp HOME        &kp PAGE_DOWN   &kp PG_UP     &kp END
                    &trans          &trans            &trans  &trans             &trans          &trans
            >;
        };

        symb_layer {
            bindings = <
&kp EXCLAMATION       &kp QUESTION     &kp LEFT_BRACE                    &kp RIGHT_BRACE               &kp PLUS      &kp DOLLAR      &kp GRAVE                &kp LS(PERCENT)             &kp LS(NUMBER_3)   &kp CARET
&kp LESS_THAN         &arrow_func_tap  &bhm LEFT_SHIFT LEFT_PARENTHESIS  &bhm LCTRL RIGHT_PARENTHESIS  &kp MINUS     &kp EQUAL       &bhm RCTRL SINGLE_QUOTE  &bhm RIGHT_SHIFT AMPERSAND  &kp DOUBLE_QUOTES  &kp LS(SEMICOLON)
&kp NON_US_BACKSLASH  &kp SLASH        &kp LEFT_BRACKET                  &kp RIGHT_BRACKET             &kp ASTERISK  &kp UNDERSCORE  &kp AT_SIGN              &kp LS(NON_US_BACKSLASH)    &kp NON_US_HASH    &kp LS(NON_US_HASH)
                                       &trans                            &trans                        &trans        &trans          &trans                   &trans
            >;
        };

        num_layer {
            bindings = <
&kp F1      &kp F2      &kp F3      &kp F4               &kp F5      &kp F6      &kp F7               &kp F8      &kp F9      &kp F10
&kp N1      &kp N2      &kp N3      &bhm LCTRL NUMBER_4  &kp N5      &kp N6      &bhm RCTRL NUMBER_7  &kp N8      &kp N9      &kp N0
&kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)           &kp LS(N5)  &kp LS(N6)  &kp LS(N7)           &kp LS(N8)  &kp LS(N9)  &kp LS(N0)
                        &trans      &kp UNDER            &trans      &trans      &trans               &trans
            >;
        };

        kb_utils {
            bindings = <
&bootloader      &none           &none         &none             &none         &none         &mkp MB1  &mkp MB2        &mkp MB3        &studio_unlock
&none            &kp C_PREVIOUS  &kp C_MUTE    &kp C_PLAY_PAUSE  &kp C_NEXT    &none        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP        &mmv MOVE_RIGHT
&bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4    &none        &mkp MB4        &msc SCRL_DOWN  &msc SCRL_UP         &mkp MB5
                                      &bt BT_CLR        &none         &none         &mkp MB1  &mkp MB2 &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};